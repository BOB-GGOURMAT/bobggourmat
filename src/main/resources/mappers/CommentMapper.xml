<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bobggourmat.dao.CommentDAO">
	
	<!--0.댓글 한개 가져오기-->
	<select id="selectByIdx" resultType="commentVO" parameterType="int">
		select * from comment where comment_idx=#{comment_idx}
	</select>
	
	<!-- 1. 댓글 저장 -->
	<insert id="comment_insert" parameterType="CommentVO">
		INSERT INTO comment(
			comment_idx,
			user_idx,
			resinfo_idx,
			comment_content,
			comment_star
		)
		VALUES (
			#{comment_idx},
			#{user_idx},
			#{resinfo_idx},
			#{comment_content},
			#{comment_star}
		)
	</insert>
	
	<!-- 2. 댓글 수정 -->
	<update id="comment_update" parameterType="CommentVO">
		UPDATE
			comment
		SET
			comment_content = #{comment_content},
			comment_star 	= #{comment_star}
		WHERE
			comment_idx 	= #{comment_idx}
	</update>
	
	<!-- 3. 댓글 삭제 -->
	<delete id="comment_delete" parameterType="int">
		DELETE FROM
			comment
		WHERE
			comment_idx     = #{comment_idx}
	</delete>
	
	<!-- 4. 댓글 리스트 보기 -->
	<select id="comment_list" resultType="CommentVO" parameterType="int">
        SELECT
            *
        FROM 
            comment
        WHERE
            resinfo_idx=#{resinfo_idx}
    </select>

    <!--  5. 개수얻기 -->
    <select id="selectCount" resultType="int">
		select count(*) from comment where resinfo_idx=#{resinfo_idx}
	</select>
	
	<!-- 6. 댓글목록조회(평가한 식당) -->
	<select id="comment_save" resultType="ResCommentVO" parameterType="int">
		SELECT 
		  u.user_nickname ,c.comment_time,comment_content,c.comment_star  
		from 
		  comment c , user u ,resinfo r 
		where 
		  c.user_idx = u.user_idx 
		  and 
		  c.resinfo_idx = r.resinfo_idx
		  and 
		  u.user_idx = #{user_idx}
	</select>
</mapper>